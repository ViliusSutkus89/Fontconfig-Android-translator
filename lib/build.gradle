group = 'com.viliussutkus89'

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29

        versionCode 3
        versionName project.version

        archivesBaseName = rootProject.name

//        issue #2
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
//    issue #2
//    externalNativeBuild.cmake {
//        path "src/androidTest/cpp/CMakeLists.txt"
//        version "3.10.2"
//    }
//    ndkVersion "21.2.6472646"
}

configurations {
    javadocDependenciesToObtainClasspath
}

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'
    javadocDependenciesToObtainClasspath 'androidx.annotation:annotation:1.1.0'

//    issue #2
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //#UNCOMMENT-DURING-STAGING#implementation 'com.viliussutkus89:fontconfig-android-translator:#STAGING-VERSION#'
    // The line above is used by the scripts/prepareLibraryForStagingRepository
}

task sourceJar(type: Jar) {
    into ("", { from android.sourceSets.main.java.srcDirs} )
    archiveBaseName.set(rootProject.name)
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDependenciesToObtainClasspath
    title = "${rootProject.name} ${project.version} API"
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                artifactId rootProject.name
                version = rootProject.version

                artifact sourceJar
                artifact javadocJar

                pom {
                    name = rootProject.name
                    description = 'Fontconfig config translator for Android'
                    url = 'https://github.com/ViliusSutkus89/Fontconfig-Android-translator'
                    packaging = 'aar'
                    inceptionYear = '2019'
                    licenses {
                        license {
                            name = 'The GNU General Public License, Version 3'
                            url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = "ViliusSutkus89"
                            name = "Vilius Sutkus"
                            email = "ViliusSutkus89@gmail.com"
                        }
                    }
                    scm {
                        url = 'https://github.com/ViliusSutkus89/Fontconfig-Android-translator'
                        connection = 'https://github.com/ViliusSutkus89/Fontconfig-Android-translator.git'
                    }
                }
            }
        }
    }

    // This may look ugly...
    // but useInMemoryPgpKeys expects valid keys even with required { false }
    if (System.getenv('SIGNING_KEY')) {
        signing {
            required { true }
            useInMemoryPgpKeys(System.getenv('SIGNING_KEY'), System.getenv('SIGNING_PASS'))
            sign publishing.publications.release
        }
    }
}
